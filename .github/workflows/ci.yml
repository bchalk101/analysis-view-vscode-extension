name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test-query-engine:
    name: Test Query Engine
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          query-engine/target/
        key: ${{ runner.os }}-query-engine-${{ hashFiles('**/Cargo.lock') }}

    - name: Install protobuf compiler
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

    - name: Check formatting
      working-directory: ./query-engine
      run: cargo fmt --all -- --check

    - name: Run clippy
      working-directory: ./query-engine
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      working-directory: ./query-engine
      run: cargo test --verbose

    - name: Build release
      working-directory: ./query-engine
      run: cargo build --release --verbose


  # Build and Test Query Engine Docker Image
  build-docker:
    name: Build Query Engine Docker Image
    runs-on: ubuntu-latest
    needs: [test-query-engine]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./query-engine
        file: ./query-engine/Dockerfile
        push: false
        tags: query-engine-service:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test-mcp-server:
    name: Test MCP Server
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          mcp-server/target/
        key: ${{ runner.os }}-mcp-server-${{ hashFiles('**/Cargo.lock') }}

    - name: Install protobuf compiler
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

    - name: Check formatting
      working-directory: ./mcp-server
      run: cargo fmt --all -- --check

    - name: Run clippy
      working-directory: ./mcp-server
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      working-directory: ./mcp-server
      run: cargo test --verbose

    - name: Build release
      working-directory: ./mcp-server
      run: cargo build --release --verbose

  build-mcp-docker:
    name: Build MCP Server Docker Image
    runs-on: ubuntu-latest
    needs: [test-mcp-server]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./mcp-server
        file: ./mcp-server/Dockerfile
        push: false
        tags: analysis-mcp-server:test
        cache-from: type=gha
        cache-to: type=gha,mode=max